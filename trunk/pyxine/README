OVERVIEW

    Pyxine is a Python package which provides Python bindings for
    libxine, the backend of the xine media player (see http://xinehq.de/).

    Using Pyxine, it is possible to write simple (or complex)
    user-interfaces to xine.  This makes it much easier for one to
    write custom xine UIs.

    For the latest news and updates, make sure to check the Pyxine
    web page: http://pyxine.sourceforge.net/

REQUIREMENTS

    To build and install this package, you'll need:

        - Python 2.2 or better
	- Modern GNU gcc/g++
	- xine-lib-1-beta4 (or better)

    If you want to hack the source, you'll also probably need:

	- SWIG (I'm using version 1.1)
	- GNU make

INSTALLATION

    Installation (hopefully) is as simple as:

	python setup.py install

    See http://www.python.org/doc/current/inst/ for more details.

USAGE

    Playing an audio file can be as simple as:

        >>> import pyxine
        >>> xine = pyxine.Xine()
        >>> stream = xine.stream_new()
        >>> stream.open("music.mp3")
        >>> stream.play()

    To play a movie, it will probably take a little more work in order to
    properly initialize the video output driver.  For now, have a look at
    ``tkplayer.py`` and ``player.py`` in the ``examples`` subdirectory.
    
    E.g., if you have the Tkinter package installed::

        # python tkplayer.py some_movie.avi

    might actually play a movie for you.  (Hit 'p' to start playback.)

    FIXME

ROADMAP
    
    pyxine.libxine

        This module is a raw interface to libxine which is more-or-less automatically
        generated by SWIG.  (See http://www.swig.org/)

        You should probably not use this module directly, as the rest of the pyxine
        package provides a friendlier object-oriented wrapper over the the functions
        in this module.

